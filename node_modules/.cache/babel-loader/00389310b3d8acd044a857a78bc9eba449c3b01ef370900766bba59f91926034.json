{"ast":null,"code":"var _jsxFileName = \"/Users/zenkri/react-weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Temperature from './components/Temperature';\nimport Details from './components/Details';\nimport getFormattedData from './makeitwork/weather';\nimport Searchbar from './components/Searchbar';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [temperatureUnit, setTemperatureUnit] = useState('metric');\n  const [query, setQuery] = useState({\n    q: \"berlin\"\n  });\n  const fetchWeather = async city => {\n    try {\n      const data = await getFormattedData({\n        q: city,\n        units: temperatureUnit\n      });\n      setWeatherData(data.currentFormattedData);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n  const handleCitySelection = selectedCity => {\n    fetchWeather(selectedCity);\n  };\n  const toggleTemperatureUnit = unit => {\n    setTemperatureUnit(unit);\n  };\n  useEffect(() => {\n    fetchWeather('Berlin');\n  }, [temperatureUnit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  from-cyan-500 to to-blue-700 `,\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      onToggleTemperatureUnit: toggleTemperatureUnit,\n      onCitySelect: handleCitySelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Temperature, {\n        currentFormattedData: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Details, {\n        h: \"hourly forecast\",\n        hourlyData: weatherData.hourly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Details, {\n        h: \"daily forecast\",\n        dailyData: weatherData.daily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 4\n  }, this);\n}\n_s(App, \"LbA9VcguJ7B7Dn28qk+gkLMX70Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Temperature","Details","getFormattedData","Searchbar","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","weatherData","setWeatherData","temperatureUnit","setTemperatureUnit","query","setQuery","q","fetchWeather","city","data","units","currentFormattedData","error","console","handleCitySelection","selectedCity","toggleTemperatureUnit","unit","className","children","onToggleTemperatureUnit","onCitySelect","fileName","_jsxFileName","lineNumber","columnNumber","h","hourlyData","hourly","dailyData","daily","_c","$RefreshReg$"],"sources":["/Users/zenkri/react-weather-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Temperature from './components/Temperature';\nimport Details from './components/Details';\nimport getFormattedData from './makeitwork/weather';\nimport Searchbar from './components/Searchbar';\nimport { useState, useEffect } from 'react';\n\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [temperatureUnit, setTemperatureUnit] = useState('metric');\n  const [query, setQuery] = useState({ q: \"berlin\" });\n\n  const fetchWeather = async (city) => {\n    try {\n      const data = await getFormattedData({ q: city, units: temperatureUnit });\n      setWeatherData(data.currentFormattedData);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n\n  const handleCitySelection = (selectedCity) => {\n    fetchWeather(selectedCity);\n  };\n\n\n  const toggleTemperatureUnit = (unit) => {\n    setTemperatureUnit(unit);\n  };\n  useEffect(() => {\n      fetchWeather('Berlin');\n  }, [temperatureUnit]);\n\n  return (\n   <div className={`mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  from-cyan-500 to to-blue-700 `}>\n      <Searchbar \n      onToggleTemperatureUnit={toggleTemperatureUnit}\n      onCitySelect={handleCitySelection} />\n      {weatherData && (\n                <>\n                    <Temperature currentFormattedData={weatherData} />\n                    <Details h=\"hourly forecast\" hourlyData={weatherData.hourly} />\n                    <Details h=\"daily forecast\" dailyData={weatherData.daily} />\n                </>\n      )}\n   </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,WAAW,MAAM,0BAA0B;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,gBAAgB,MAAM,sBAAsB;AACnD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,QAAQ,CAAC;EAChE,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC;IAAEc,CAAC,EAAE;EAAS,CAAC,CAAC;EAEnD,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMnB,gBAAgB,CAAC;QAAEgB,CAAC,EAAEE,IAAI;QAAEE,KAAK,EAAER;MAAgB,CAAC,CAAC;MACxED,cAAc,CAACQ,IAAI,CAACE,oBAAoB,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAME,mBAAmB,GAAIC,YAAY,IAAK;IAC5CR,YAAY,CAACQ,YAAY,CAAC;EAC5B,CAAC;EAGD,MAAMC,qBAAqB,GAAIC,IAAI,IAAK;IACtCd,kBAAkB,CAACc,IAAI,CAAC;EAC1B,CAAC;EACDxB,SAAS,CAAC,MAAM;IACZc,YAAY,CAAC,QAAQ,CAAC;EAC1B,CAAC,EAAE,CAACL,eAAe,CAAC,CAAC;EAErB,oBACCP,OAAA;IAAKuB,SAAS,EAAG,0FAA0F;IAAAC,QAAA,gBACxGxB,OAAA,CAACJ,SAAS;MACV6B,uBAAuB,EAAEJ,qBAAsB;MAC/CK,YAAY,EAAEP;IAAoB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpCzB,WAAW,iBACFL,OAAA,CAAAE,SAAA;MAAAsB,QAAA,gBACIxB,OAAA,CAACP,WAAW;QAACuB,oBAAoB,EAAEX;MAAY;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClD9B,OAAA,CAACN,OAAO;QAACqC,CAAC,EAAC,iBAAiB;QAACC,UAAU,EAAE3B,WAAW,CAAC4B;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/D9B,OAAA,CAACN,OAAO;QAACqC,CAAC,EAAC,gBAAgB;QAACG,SAAS,EAAE7B,WAAW,CAAC8B;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC9D,CACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET;AAAC1B,EAAA,CAxCQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}