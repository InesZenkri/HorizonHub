{"ast":null,"code":"import{DateTime}from'luxon';import config from\"./config\";const API_KEY=config.API_KEY;const BASE_URL=\"https://api.openweathermap.org/data/2.5\";const getData=(infotype,searchParams)=>{const url=new URL(BASE_URL+\"/\"+infotype);url.search=new URLSearchParams({...searchParams,appid:API_KEY});return fetch(url).then(res=>res.json());};const formatCurrentData=data=>{try{const{main:{temp,feels_like,temp_min,temp_max,humidity},sys:{country,sunrise,sunset},coord:{lat,lon},wind:{speed},timezone,weather,name,dt}=data;const{description,icon,main}=weather[0];return{description,lat,lon,temp,feels_like,temp_min,temp_max,humidity,name,dt,country,sunrise,sunset,icon,speed,timezone,main};}catch(error){console.error(\"Error formatting current data:\",error.message);throw error;}};const getFormattedData=async searchParams=>{let data;data=await getData(\"weather\",searchParams);const currentFormattedData=formatCurrentData(data);return{currentFormattedData};};const formatTLT=function(secs,zone){let format=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"hh:mm a\";return DateTime.fromSeconds(secs).setZone(zone).toFormat(format);};const CustomDate=function(secs,timezone){let format=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"cccc, dd LLL yyyy' | Local time: 'hh:mm a\";const dt=DateTime.fromSeconds(secs,{zone:\"UTC\"});const localDt=dt.plus({seconds:timezone});const formattedDate=localDt.toFormat(format);return formattedDate;};const round=number=>{return number!==undefined?number.toFixed(0):'';};const br=async currentFormattedData=>{console.log(currentFormattedData);const lat=currentFormattedData.lat;const lon=currentFormattedData.lon;const currentDate=new Date().toISOString();const brightSkyResponse=await fetch(\"https://api.brightsky.dev/weather?lat=\".concat(lat,\"&lon=\").concat(lon,\"&date=\").concat(currentDate));const brightSkyData=await brightSkyResponse.json();console.log(brightSkyData);return brightSkyData.weather;};export default getFormattedData;export{formatTLT,CustomDate,round,getFormattedData,br};","map":{"version":3,"names":["DateTime","config","API_KEY","BASE_URL","getData","infotype","searchParams","url","URL","search","URLSearchParams","appid","fetch","then","res","json","formatCurrentData","data","main","temp","feels_like","temp_min","temp_max","humidity","sys","country","sunrise","sunset","coord","lat","lon","wind","speed","timezone","weather","name","dt","description","icon","error","console","message","getFormattedData","currentFormattedData","formatTLT","secs","zone","format","arguments","length","undefined","fromSeconds","setZone","toFormat","CustomDate","localDt","plus","seconds","formattedDate","round","number","toFixed","br","log","currentDate","Date","toISOString","brightSkyResponse","concat","brightSkyData"],"sources":["/Users/zenkri/HorizonHub/src/makeitwork/weather.js"],"sourcesContent":["import { DateTime } from 'luxon';\nimport config from \"./config\";\nconst API_KEY = config.API_KEY;\nconst BASE_URL =\"https://api.openweathermap.org/data/2.5\";\n\n\nconst getData = (infotype, searchParams) => {\n    const url = new URL(BASE_URL + \"/\" + infotype);\n    url.search = new URLSearchParams({ ...searchParams, appid: API_KEY})\n    return fetch(url).then((res) => res.json())\n};\n\nconst formatCurrentData = (data) => { \n    try {\n        const {\n            main: { temp, feels_like, temp_min, temp_max, humidity },\n            sys: { country, sunrise, sunset },\n            coord: { lat, lon },\n            wind: { speed },\n            timezone,\n            weather,\n            name,\n            dt,\n        } = data;\n    \n    const { description, icon, main } = weather[0];\n    \n    return {\n        description,\n        lat,\n        lon,\n        temp,\n        feels_like,\n        temp_min,\n        temp_max,\n        humidity,\n        name,\n        dt,\n        country,\n        sunrise,\n        sunset,\n        icon,\n        speed,\n        timezone,\n        main\n        };\n        } catch (error) {\n            console.error(\"Error formatting current data:\", error.message);\n            throw error; \n        }\n    };\n    \n\n\nconst getFormattedData = async (searchParams) => { \n    let data;\n    data = await getData(\"weather\", searchParams);\n    const currentFormattedData = formatCurrentData(data);\n    return { currentFormattedData };\n  \n};\n\nconst formatTLT = (\n    secs,\n    zone,\n    format = \"hh:mm a\"\n) => DateTime.fromSeconds(secs).setZone(zone).toFormat(format);\n\nconst CustomDate = (secs, timezone, format = \"cccc, dd LLL yyyy' | Local time: 'hh:mm a\") => {\n    const dt = DateTime.fromSeconds(secs, { zone: `UTC` });\n    const localDt = dt.plus({ seconds: timezone });\n    const formattedDate = localDt.toFormat(format);\n    return formattedDate;\n};\n\nconst round = (number) => {\n    return number !== undefined ? number.toFixed(0) : '';\n};\n\nconst br = async(currentFormattedData) => { \n    console.log(currentFormattedData);\n    const lat = currentFormattedData.lat;\n    const lon = currentFormattedData.lon;\n    const currentDate = new Date().toISOString();\n    const brightSkyResponse = await fetch(`https://api.brightsky.dev/weather?lat=${lat}&lon=${lon}&date=${currentDate}`);\n    const brightSkyData = await brightSkyResponse.json();\n    console.log(brightSkyData);\n    return(brightSkyData.weather);\n};\n\nexport default getFormattedData;\nexport { formatTLT, CustomDate, round, getFormattedData,br}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}