{"ast":null,"code":"var _jsxFileName = \"/Users/zenkri/HorizonHub/src/components/Searchbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { UilSearch, UilLocationPoint, UilMap } from \"@iconscout/react-unicons\";\nimport { getFormattedData } from '../makeitwork/weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Searchbar({\n  onToggleTemperatureUnit,\n  onCitySelect\n}) {\n  _s();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [temperatureUnit, setTemperatureUnit] = useState('metric');\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [citySuggestions, setCitySuggestions] = useState([]);\n  const handleLocationClick = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        try {\n          const reverseGeocodeUrl = `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`;\n          const reverseGeocodeResponse = await fetch(reverseGeocodeUrl);\n          const reverseGeocodeData = await reverseGeocodeResponse.json();\n          const city = reverseGeocodeData.city;\n          console.log(\"City:\", city);\n          onCitySelect(city, temperatureUnit);\n        } catch (error) {\n          console.error(\"Error getting weather data:\", error.message);\n        }\n      }, error => {\n        console.error(\"Error getting user's location:\", error.message);\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  };\n  const handleInputClick = e => {\n    e.target.select();\n  };\n  const handleSearchClick = async () => {\n    if (searchQuery.trim() !== \"\") {\n      onCitySelect(searchQuery, temperatureUnit);\n      setSearchQuery(\"\");\n      setCurrentLocation(null);\n    }\n  };\n  useEffect(() => {\n    // Reset city suggestions when the search query is empty\n    if (searchQuery.trim() === \"\") {\n      setCitySuggestions([]);\n    }\n  }, [searchQuery]);\n  const handleInputChange = e => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    fetchCitySuggestions(query);\n  };\n  const fetchCitySuggestions = async query => {\n    try {\n      const suggestionUrl = `https://api.bigdatacloud.net/data/cities?&prefix=${query}&localityLanguage=en`;\n      const suggestionResponse = await fetch(suggestionUrl);\n      const suggestionData = await suggestionResponse.json();\n      const suggestions = suggestionData.map(city => city.city);\n      setCitySuggestions(suggestions);\n    } catch (error) {\n      console.error(\"Error getting city suggestions:\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row justify-center my-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row w-3/4 items-center justify-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: handleInputChange,\n        onClick: handleInputClick,\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            handleSearchClick();\n          }\n        },\n        placeholder: \" Search for city.... \",\n        className: \"text-xl font-light p-2 w-full shadow-xl focus:outline-none capitalize placeholder:lowercase rounded-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UilSearch, {\n        size: 30,\n        onClick: handleSearchClick,\n        className: \"text-white cursor-pointer transition ease-out hover:scale-125\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UilLocationPoint, {\n        size: 30,\n        onClick: handleLocationClick,\n        className: \"text-white cursor-pointer transition ease-out hover:scale-125\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UilMap, {\n        size: 30,\n        className: \"text-white cursor-pointer transition ease-out hover:scale-125\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), citySuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"absolute mt-2 p-2 bg-white border rounded shadow-md\",\n        children: citySuggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"cursor-pointer hover:bg-gray-200 p-1 rounded\",\n          onClick: () => {\n            onCitySelect(suggestion, temperatureUnit);\n            setSearchQuery(\"\");\n            setCurrentLocation(null);\n            setCitySuggestions([]);\n          },\n          children: suggestion\n        }, suggestion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row w-1/4 items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"metric\",\n        onClick: () => onToggleTemperatureUnit('metric'),\n        className: \"text-xl text-white font-light transition ease-out hover:scale-125\",\n        children: \"\\xB0C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-white mx-1\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"imperial\",\n        onClick: () => onToggleTemperatureUnit('imperial'),\n        className: \"text-xl text-white font-light transition ease-out hover:scale-125\",\n        children: \"\\xB0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Searchbar, \"zZqOBSp0KnhL3F+5/0h013nLUjA=\");\n_c = Searchbar;\nexport default Searchbar;\nvar _c;\n$RefreshReg$(_c, \"Searchbar\");","map":{"version":3,"names":["React","useState","useEffect","UilSearch","UilLocationPoint","UilMap","getFormattedData","jsxDEV","_jsxDEV","Searchbar","onToggleTemperatureUnit","onCitySelect","_s","searchQuery","setSearchQuery","temperatureUnit","setTemperatureUnit","currentLocation","setCurrentLocation","citySuggestions","setCitySuggestions","handleLocationClick","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","reverseGeocodeUrl","reverseGeocodeResponse","fetch","reverseGeocodeData","json","city","console","log","error","message","handleInputClick","e","target","select","handleSearchClick","trim","handleInputChange","query","value","fetchCitySuggestions","suggestionUrl","suggestionResponse","suggestionData","suggestions","map","className","children","type","onChange","onClick","onKeyDown","key","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","size","length","suggestion","name","_c","$RefreshReg$"],"sources":["/Users/zenkri/HorizonHub/src/components/Searchbar.jsx"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { UilSearch, UilLocationPoint , UilMap} from \"@iconscout/react-unicons\";\nimport { getFormattedData } from '../makeitwork/weather';\n\nfunction Searchbar({ onToggleTemperatureUnit, onCitySelect})  {\n\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [temperatureUnit, setTemperatureUnit] = useState('metric');\n    const [currentLocation, setCurrentLocation] = useState(null);\n    const [citySuggestions, setCitySuggestions] = useState([]);\n    \n    const handleLocationClick = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n              async (position) => {\n                const latitude = position.coords.latitude;\n                const longitude = position.coords.longitude;\n                try {\n                  const reverseGeocodeUrl = `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`;\n                  const reverseGeocodeResponse = await fetch(reverseGeocodeUrl);\n                  const reverseGeocodeData = await reverseGeocodeResponse.json();\n                  const city = reverseGeocodeData.city;\n                  console.log(\"City:\", city);\n                  onCitySelect(city,temperatureUnit);\n                } catch (error) {\n                  console.error(\"Error getting weather data:\", error.message);\n                }\n              },\n            (error) => {\n              console.error(\"Error getting user's location:\", error.message);\n            }\n          );\n        } else {\n            console.error(\"Geolocation is not supported by this browser.\");\n          }\n    };\n\n    const handleInputClick = (e) => {\n        e.target.select();\n    };\n\n    const handleSearchClick = async () => {\n        if (searchQuery.trim() !== \"\") {\n            onCitySelect(searchQuery, temperatureUnit);\n            setSearchQuery(\"\");\n            setCurrentLocation(null);\n        }\n        };\n        useEffect(() => {\n          // Reset city suggestions when the search query is empty\n          if (searchQuery.trim() === \"\") {\n            setCitySuggestions([]);\n          }\n        }, [searchQuery]);  \n    const handleInputChange = (e) => {\n      const query = e.target.value;\n      setSearchQuery(query);\n      fetchCitySuggestions(query);\n    };\n    const fetchCitySuggestions = async (query) => {\n      try {\n        const suggestionUrl = `https://api.bigdatacloud.net/data/cities?&prefix=${query}&localityLanguage=en`;\n        const suggestionResponse = await fetch(suggestionUrl);\n        const suggestionData = await suggestionResponse.json();\n        const suggestions = suggestionData.map((city) => city.city);\n        setCitySuggestions(suggestions);\n      } catch (error) {\n        console.error(\"Error getting city suggestions:\", error.message);\n      }\n    };\n\n    return (\n        <div className=\"flex flex-row justify-center my-6\">\n            <div className=\"flex flex-row w-3/4 items-center justify-center space-x-4\">\n                <input\n                type=\"text\"\n                value={searchQuery}\n                onChange={handleInputChange}\n                onClick={handleInputClick}\n                onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                        handleSearchClick();\n                    }\n                }}\n                placeholder=\" Search for city.... \"\n                className=\"text-xl font-light p-2 w-full shadow-xl focus:outline-none capitalize placeholder:lowercase rounded-full\"\n                />\n                <UilSearch\n                    size={30}\n                    onClick={handleSearchClick}\n                    className=\"text-white cursor-pointer transition ease-out hover:scale-125\"\n                />\n                <UilLocationPoint\n                    size={30}\n                    onClick={handleLocationClick}\n                    className=\"text-white cursor-pointer transition ease-out hover:scale-125\"\n                />\n                <UilMap\n                size={30}\n                className=\"text-white cursor-pointer transition ease-out hover:scale-125\"\n                />\n{citySuggestions.length > 0 && (\n        <ul className=\"absolute mt-2 p-2 bg-white border rounded shadow-md\">\n          {citySuggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              className=\"cursor-pointer hover:bg-gray-200 p-1 rounded\"\n              onClick={() => {\n                onCitySelect(suggestion, temperatureUnit);\n                setSearchQuery(\"\");\n                setCurrentLocation(null);\n                setCitySuggestions([]);\n              }}\n            >\n              {suggestion}\n            </li>\n          ))}\n        </ul>\n      )}\n                \n            </div>\n    \n          <div className=\"flex flex-row w-1/4 items-center justify-center\">\n            <button\n              name=\"metric\"\n              onClick={() => onToggleTemperatureUnit('metric')}\n              className=\"text-xl text-white font-light transition ease-out hover:scale-125\"\n            >\n              °C\n            </button>\n            <p className=\"text-xl text-white mx-1\">|</p>\n            <button\n              name=\"imperial\"\n              onClick={() => onToggleTemperatureUnit('imperial')}\n              className=\"text-xl text-white font-light transition ease-out hover:scale-125\"\n            >\n              °F\n            </button>\n          </div>\n        </div>\n      );\n}\n\nexport default Searchbar\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}