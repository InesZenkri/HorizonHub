{"ast":null,"code":"var _jsxFileName = \"/Users/zenkri/react-weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Temperature from './components/Temperature';\nimport Details from './components/Details';\nimport getFormattedData from './makeitwork/weather';\nimport Searchbar from './components/Searchbar';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [temperatureUnit, setTemperatureUnit] = useState('metric');\n  const fetchWeather = async ({\n    city,\n    lat,\n    lon\n  }) => {\n    try {\n      let data;\n      if (city) {\n        data = await getFormattedData({\n          q: city,\n          units: temperatureUnit\n        });\n      } else if (lat && lon) {\n        data = await getFormattedData({\n          lat,\n          lon,\n          units: temperatureUnit\n        });\n      } else {\n        data = await getFormattedData({\n          q: 'Berlin',\n          units: temperatureUnit\n        });\n      }\n      setWeatherData(data.currentFormattedData);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n  const handleCitySelection = (selectedCity, unit) => {\n    const [city, lat, lon] = selectedCity.split(',');\n    fetchWeather({\n      city,\n      lat,\n      lon,\n      unit\n    });\n  };\n  const toggleTemperatureUnit = unit => {\n    setTemperatureUnit(unit);\n  };\n  useEffect(() => {\n    if (weatherData) {\n      fetchWeather({\n        city: weatherData.name,\n        unit: temperatureUnit\n      });\n    } else {\n      // Default location (Berlin) or use the user's location if available\n      fetchWeather({\n        city: 'Berlin',\n        unit: temperatureUnit\n      });\n    }\n  }, [temperatureUnit, weatherData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  from-cyan-500 to to-blue-700 `,\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      onToggleTemperatureUnit: toggleTemperatureUnit,\n      onCitySelect: handleCitySelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Temperature, {\n        currentFormattedData: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Details, {\n        h: \"hourly forecast\",\n        hourlyData: weatherData.hourly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Details, {\n        h: \"daily forecast\",\n        dailyData: weatherData.daily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 4\n  }, this);\n}\n_s(App, \"z6JodLGNQhfC1KsBom5NIZ9oawA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Temperature","Details","getFormattedData","Searchbar","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","weatherData","setWeatherData","temperatureUnit","setTemperatureUnit","fetchWeather","city","lat","lon","data","q","units","currentFormattedData","error","console","handleCitySelection","selectedCity","unit","split","toggleTemperatureUnit","name","className","children","onToggleTemperatureUnit","onCitySelect","fileName","_jsxFileName","lineNumber","columnNumber","h","hourlyData","hourly","dailyData","daily","_c","$RefreshReg$"],"sources":["/Users/zenkri/react-weather-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Temperature from './components/Temperature';\nimport Details from './components/Details';\nimport getFormattedData from './makeitwork/weather';\nimport Searchbar from './components/Searchbar';\nimport { useState, useEffect } from 'react';\n\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [temperatureUnit, setTemperatureUnit] = useState('metric');\n  \n  const fetchWeather = async ({ city, lat, lon }) => {\n      try {\n          let data;\n          if (city) {\n              data = await getFormattedData({ q: city, units: temperatureUnit });\n          } else if (lat && lon) {\n              data = await getFormattedData({ lat, lon, units: temperatureUnit });\n          } else {\n              data = await getFormattedData({ q: 'Berlin', units: temperatureUnit });\n          }\n          setWeatherData(data.currentFormattedData);\n      } catch (error) {\n          console.error('Error fetching weather data:', error);\n      }\n  };\n  \n  const handleCitySelection = (selectedCity, unit) => {\n      const [city, lat, lon] = selectedCity.split(',');\n  \n      fetchWeather({ city, lat, lon, unit });\n  };\n  \n  const toggleTemperatureUnit = (unit) => {\n      setTemperatureUnit(unit);\n  };\n  \n  useEffect(() => {\n      if (weatherData) {\n          fetchWeather({ city: weatherData.name, unit: temperatureUnit });\n      } else {\n          // Default location (Berlin) or use the user's location if available\n          fetchWeather({ city: 'Berlin', unit: temperatureUnit });\n      }\n  }, [temperatureUnit, weatherData]);\n  \n  return (\n   <div className={`mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  from-cyan-500 to to-blue-700 `}>\n      <Searchbar \n      onToggleTemperatureUnit={toggleTemperatureUnit}\n      onCitySelect={handleCitySelection} />\n      {weatherData && (\n                <>\n                    <Temperature currentFormattedData={weatherData} />\n                    <Details h=\"hourly forecast\" hourlyData={weatherData.hourly} />\n                    <Details h=\"daily forecast\" dailyData={weatherData.daily} />\n                </>\n      )}\n   </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}