{"ast":null,"code":"var _jsxFileName = \"/Users/zenkri/react-weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Temperature from './components/Temperature';\nimport Details from './components/Details';\nimport getFormattedData from './makeitwork/weather';\nimport Searchbar from './components/Searchbar';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState({\n    q: \"berlin\"\n  });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n  const formatBackground = () => {\n    if (!weather) return \"from-cyan-700 to-blue-700\";\n    const threshold = units === \"metric\" ? 20 : 60;\n    if (weather.temp <= threshold) return \"from-cyan-700 to-blue-700\";\n    return \"from-yellow-700 to-orange-700\";\n  };\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({\n        ...query,\n        units\n      }).then(data => {\n        setWeather(data);\n      });\n    };\n    fetchWeather();\n  }, [query, units]);\n  fetchWeather();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  h-fit shadow-xl shadow-gray-400 ${formatBackground()}`,\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      setQuery: setQuery,\n      units: units,\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }, this), weather && /*#__PURE__*/_jsxDEV(Temperature, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Details, {\n      h: \"hourly forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Details, {\n      h: \"daily forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gM9ltGbVXP1eDM0tSzoINkjwl+Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Temperature","Details","getFormattedData","Searchbar","useState","jsxDEV","_jsxDEV","App","_s","query","setQuery","q","units","setUnits","weather","setWeather","formatBackground","threshold","temp","useEffect","fetchWeather","getFormattedWeatherData","then","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","h","_c","$RefreshReg$"],"sources":["/Users/zenkri/react-weather-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Temperature from './components/Temperature';\nimport Details from './components/Details';\nimport getFormattedData from './makeitwork/weather';\nimport Searchbar from './components/Searchbar';\nimport { useState } from 'react';\n\n\nfunction App() {\n\n  const [query, setQuery] = useState({ q: \"berlin\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  const formatBackground = () => {\n    if (!weather) return \"from-cyan-700 to-blue-700\";\n    const threshold = units === \"metric\" ? 20 : 60;\n    if (weather.temp <= threshold) return \"from-cyan-700 to-blue-700\";\n\n    return \"from-yellow-700 to-orange-700\";\n  };\n\n  useEffect(() => {\n    const fetchWeather = async () => { await getFormattedWeatherData({ ...query, units }).then((data) => {\n       setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query, units]);\n\nfetchWeather();\n  return (\n    <div className={`mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  h-fit shadow-xl shadow-gray-400 ${formatBackground()}`}> \n     <Searchbar setQuery={setQuery} units={units} setUnits={setUnits} />\n     {weather && (\n        <Temperature weather={weather} />\n      )}\n      <Details h=\"hourly forecast\" />\n      <Details h=\"daily forecast\" />\n   </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,WAAW,MAAM,0BAA0B;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,gBAAgB,MAAM,sBAAsB;AACnD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IAAEO,CAAC,EAAE;EAAS,CAAC,CAAC;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACF,OAAO,EAAE,OAAO,2BAA2B;IAChD,MAAMG,SAAS,GAAGL,KAAK,KAAK,QAAQ,GAAG,EAAE,GAAG,EAAE;IAC9C,IAAIE,OAAO,CAACI,IAAI,IAAID,SAAS,EAAE,OAAO,2BAA2B;IAEjE,OAAO,+BAA+B;EACxC,CAAC;EAEDE,SAAS,CAAC,MAAM;IACd,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAAE,MAAMC,uBAAuB,CAAC;QAAE,GAAGZ,KAAK;QAAEG;MAAM,CAAC,CAAC,CAACU,IAAI,CAAEC,IAAI,IAAK;QAClGR,UAAU,CAACQ,IAAI,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC;IAEDH,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACX,KAAK,EAAEG,KAAK,CAAC,CAAC;EAEpBQ,YAAY,CAAC,CAAC;EACZ,oBACEd,OAAA;IAAKkB,SAAS,EAAG,8FAA6FR,gBAAgB,CAAC,CAAE,EAAE;IAAAS,QAAA,gBAClInB,OAAA,CAACH,SAAS;MAACO,QAAQ,EAAEA,QAAS;MAACE,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClEf,OAAO,iBACLR,OAAA,CAACN,WAAW;MAACc,OAAO,EAAEA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACjC,eACDvB,OAAA,CAACL,OAAO;MAAC6B,CAAC,EAAC;IAAiB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BvB,OAAA,CAACL,OAAO;MAAC6B,CAAC,EAAC;IAAgB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAET;AAACrB,EAAA,CAlCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}