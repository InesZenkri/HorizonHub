{"ast":null,"code":"// these aren't really private, but nor are they really useful to document\n\n/**\n * @private\n */\nclass LuxonError extends Error {}\n\n/**\n * @private\n */\nexport class InvalidDateTimeError extends LuxonError {\n  constructor(reason) {\n    super(\"Invalid DateTime: \".concat(reason.toMessage()));\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidIntervalError extends LuxonError {\n  constructor(reason) {\n    super(\"Invalid Interval: \".concat(reason.toMessage()));\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidDurationError extends LuxonError {\n  constructor(reason) {\n    super(\"Invalid Duration: \".concat(reason.toMessage()));\n  }\n}\n\n/**\n * @private\n */\nexport class ConflictingSpecificationError extends LuxonError {}\n\n/**\n * @private\n */\nexport class InvalidUnitError extends LuxonError {\n  constructor(unit) {\n    super(\"Invalid unit \".concat(unit));\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidArgumentError extends LuxonError {}\n\n/**\n * @private\n */\nexport class ZoneIsAbstractError extends LuxonError {\n  constructor() {\n    super(\"Zone is an abstract class\");\n  }\n}","map":{"version":3,"names":["LuxonError","Error","InvalidDateTimeError","constructor","reason","concat","toMessage","InvalidIntervalError","InvalidDurationError","ConflictingSpecificationError","InvalidUnitError","unit","InvalidArgumentError","ZoneIsAbstractError"],"sources":["/Users/zenkri/HorizonHub/node_modules/luxon/src/errors.js"],"sourcesContent":["// these aren't really private, but nor are they really useful to document\n\n/**\n * @private\n */\nclass LuxonError extends Error {}\n\n/**\n * @private\n */\nexport class InvalidDateTimeError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid DateTime: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidIntervalError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Interval: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidDurationError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Duration: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class ConflictingSpecificationError extends LuxonError {}\n\n/**\n * @private\n */\nexport class InvalidUnitError extends LuxonError {\n  constructor(unit) {\n    super(`Invalid unit ${unit}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidArgumentError extends LuxonError {}\n\n/**\n * @private\n */\nexport class ZoneIsAbstractError extends LuxonError {\n  constructor() {\n    super(\"Zone is an abstract class\");\n  }\n}\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA,MAAMA,UAAU,SAASC,KAAK,CAAC;;AAE/B;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,SAASF,UAAU,CAAC;EACnDG,WAAWA,CAACC,MAAM,EAAE;IAClB,KAAK,sBAAAC,MAAA,CAAsBD,MAAM,CAACE,SAAS,CAAC,CAAC,CAAE,CAAC;EAClD;AACF;;AAEA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,SAASP,UAAU,CAAC;EACnDG,WAAWA,CAACC,MAAM,EAAE;IAClB,KAAK,sBAAAC,MAAA,CAAsBD,MAAM,CAACE,SAAS,CAAC,CAAC,CAAE,CAAC;EAClD;AACF;;AAEA;AACA;AACA;AACA,OAAO,MAAME,oBAAoB,SAASR,UAAU,CAAC;EACnDG,WAAWA,CAACC,MAAM,EAAE;IAClB,KAAK,sBAAAC,MAAA,CAAsBD,MAAM,CAACE,SAAS,CAAC,CAAC,CAAE,CAAC;EAClD;AACF;;AAEA;AACA;AACA;AACA,OAAO,MAAMG,6BAA6B,SAAST,UAAU,CAAC;;AAE9D;AACA;AACA;AACA,OAAO,MAAMU,gBAAgB,SAASV,UAAU,CAAC;EAC/CG,WAAWA,CAACQ,IAAI,EAAE;IAChB,KAAK,iBAAAN,MAAA,CAAiBM,IAAI,CAAE,CAAC;EAC/B;AACF;;AAEA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,SAASZ,UAAU,CAAC;;AAErD;AACA;AACA;AACA,OAAO,MAAMa,mBAAmB,SAASb,UAAU,CAAC;EAClDG,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,2BAA2B,CAAC;EACpC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}