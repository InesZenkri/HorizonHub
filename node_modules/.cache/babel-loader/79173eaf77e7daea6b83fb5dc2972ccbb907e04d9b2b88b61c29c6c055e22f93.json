{"ast":null,"code":"var _jsxFileName = \"/Users/zenkri/HorizonHub/src/components/Daily.jsx\";\nimport React from 'react';\nimport { Icon } from '@iconify/react';\nimport { useState, useEffect } from 'react';\nimport { round } from '../makeitwork/weather';\nimport { DateTime } from 'luxon';\nimport { UilTear, UilWind, UilArrowUp, UilArrowDown } from \"@iconscout/react-unicons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Daily({\n  h,\n  currentFormattedData,\n  temperatureUnit\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-stat mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white font-medium uppercase\",\n        children: h\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"my-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center justify-start text-white details-scroll-container overflow-x-auto relative \",\n      children: currentFormattedData.forecast.forecastday.slice(1).map((dayItem, index) => {\n        const date = DateTime.fromISO(dayItem.date);\n        // Extract information from the response\n        const iconPath = dayItem.day.condition.icon;\n        const iconParts = iconPath.split('/');\n        const iconName = iconParts[iconParts.length - 1];\n\n        // Construct the new path based on your desired folder structure\n        const dayOrNight = iconPath.includes('day') ? 'day' : 'night';\n        const newPath = `./icons/64x64/${dayOrNight}/${iconName}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center justify-center mx-2\",\n          style: {\n            backgroundColor: 'rgb(255, 255, 255), 0.2)',\n            borderRadius: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-light text-sm\",\n            children: date.toFormat('cccc')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: dayItem.day.condition.icon,\n            className: \"my-1\",\n            type: \"image/png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-light text-sm flex flex-row\",\n            children: [/*#__PURE__*/_jsxDEV(UilArrowUp, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), \" \", temperatureUnit === 'Celsius' ? round(dayItem.day.maxtemp_c) : round(dayItem.day.maxtemp_f), \"\\xB0, \", /*#__PURE__*/_jsxDEV(UilArrowDown, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 140\n            }, this), \" \", temperatureUnit === 'Celsius' ? round(dayItem.day.mintemp_c) : round(dayItem.day.mintemp_f), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-light text-sm flex flex-row mx-2\",\n            children: [/*#__PURE__*/_jsxDEV(UilTear, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), \" \", round(dayItem.day.avghumidity), \", \", /*#__PURE__*/_jsxDEV(UilWind, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 75\n            }, this), \" \", round(dayItem.day.maxwind_kph)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = Daily;\nexport default Daily;\nvar _c;\n$RefreshReg$(_c, \"Daily\");","map":{"version":3,"names":["React","Icon","useState","useEffect","round","DateTime","UilTear","UilWind","UilArrowUp","UilArrowDown","jsxDEV","_jsxDEV","Daily","h","currentFormattedData","temperatureUnit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","forecast","forecastday","slice","map","dayItem","index","date","fromISO","iconPath","day","condition","icon","iconParts","split","iconName","length","dayOrNight","includes","newPath","style","backgroundColor","borderRadius","toFormat","src","type","size","maxtemp_c","maxtemp_f","mintemp_c","mintemp_f","avghumidity","maxwind_kph","_c","$RefreshReg$"],"sources":["/Users/zenkri/HorizonHub/src/components/Daily.jsx"],"sourcesContent":["import React from 'react'\nimport { Icon } from '@iconify/react';\nimport { useState, useEffect } from 'react';\nimport { round  } from '../makeitwork/weather'; \nimport { DateTime } from 'luxon';\nimport {\n    UilTear,\n    UilWind,\n    UilArrowUp,\n    UilArrowDown,\n  } from \"@iconscout/react-unicons\";\nfunction Daily({h, currentFormattedData ,temperatureUnit}) {\n\n    return (\n        <div>\n          <div className=\"flex items-center justify-stat mt-6\">\n            <p className=\"text-white font-medium uppercase\">{h}</p>\n          </div>\n          <hr className=\"my-2\"></hr>\n          <div className=\"flex flex-row items-center justify-start text-white details-scroll-container overflow-x-auto relative \">\n            {currentFormattedData.forecast.forecastday.slice(1).map((dayItem, index) => {\n              const date = DateTime.fromISO(dayItem.date);\n                // Extract information from the response\n                const iconPath = dayItem.day.condition.icon;\n                const iconParts = iconPath.split('/');\n                const iconName = iconParts[iconParts.length - 1]; \n\n                // Construct the new path based on your desired folder structure\n                const dayOrNight = iconPath.includes('day') ? 'day' : 'night';\n                const newPath = `./icons/64x64/${dayOrNight}/${iconName}`;\n              return (\n                <div\n                  key={index}\n                  className=\"flex flex-col items-center justify-center mx-2\"\n                  style={{ backgroundColor: 'rgb(255, 255, 255), 0.2)', borderRadius: '8px' }}\n                >\n                  <p className=\"font-light text-sm\">{date.toFormat('cccc')}</p>\n                  <img src={dayItem.day.condition.icon} className=\"my-1\" type=\"image/png\" />\n                  <p className=\"font-light text-sm flex flex-row\">\n                  <UilArrowUp size={18} /> {temperatureUnit === 'Celsius' ? round(dayItem.day.maxtemp_c) : round(dayItem.day.maxtemp_f)}°, <UilArrowDown size={18} /> {temperatureUnit === 'Celsius' ? round(dayItem.day.mintemp_c) : round(dayItem.day.mintemp_f)}°\n                  </p>\n                  <p className=\"font-light text-sm flex flex-row mx-2\">\n                  <UilTear size={18} /> {round(dayItem.day.avghumidity)}, <UilWind size={18} /> {round(dayItem.day.maxwind_kph)}\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      );\n\n}  \nexport default Daily;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}