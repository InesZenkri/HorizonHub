{"ast":null,"code":"import { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\nfunction intUnit(regex) {\n  let post = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : i => i;\n  return {\n    regex,\n    deser: _ref => {\n      let [s] = _ref;\n      return post(parseDigits(s));\n    }\n  };\n}\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = \"[ \".concat(NBSP, \"]\");\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\nfunction stripInsensitivities(s) {\n  return s.replace(/\\./g, \"\") // ignore dots that were made optional\n  .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n  .toLowerCase();\n}\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: _ref2 => {\n        let [s] = _ref2;\n        return strings.findIndex(i => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex;\n      }\n    };\n  }\n}\nfunction offset(regex, groups) {\n  return {\n    regex,\n    deser: _ref3 => {\n      let [, h, m] = _ref3;\n      return signedOffset(h, m);\n    },\n    groups\n  };\n}\nfunction simple(regex) {\n  return {\n    regex,\n    deser: _ref4 => {\n      let [s] = _ref4;\n      return s;\n    }\n  };\n}\nfunction escapeToken(value) {\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\n/**\n * @param token\n * @param {Locale} loc\n */\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n    two = digitRegex(loc, \"{2}\"),\n    three = digitRegex(loc, \"{3}\"),\n    four = digitRegex(loc, \"{4}\"),\n    six = digitRegex(loc, \"{6}\"),\n    oneOrTwo = digitRegex(loc, \"{1,2}\"),\n    oneToThree = digitRegex(loc, \"{1,3}\"),\n    oneToSix = digitRegex(loc, \"{1,6}\"),\n    oneToNine = digitRegex(loc, \"{1,9}\"),\n    twoToFour = digitRegex(loc, \"{2,4}\"),\n    fourToSix = digitRegex(loc, \"{4,6}\"),\n    literal = t => ({\n      regex: RegExp(escapeToken(t.val)),\n      deser: _ref5 => {\n        let [s] = _ref5;\n        return s;\n      },\n      literal: true\n    }),\n    unitate = t => {\n      if (token.literal) {\n        return literal(t);\n      }\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\"), 0);\n        case \"GG\":\n          return oneOf(loc.eras(\"long\"), 0);\n        // years\n        case \"y\":\n          return intUnit(oneToSix);\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n        case \"yyyy\":\n          return intUnit(four);\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n        case \"M\":\n          return intUnit(oneOrTwo);\n        case \"MM\":\n          return intUnit(two);\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true), 1);\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true), 1);\n        case \"L\":\n          return intUnit(oneOrTwo);\n        case \"LL\":\n          return intUnit(two);\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false), 1);\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false), 1);\n        // dates\n        case \"d\":\n          return intUnit(oneOrTwo);\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n        case \"o\":\n          return intUnit(oneToThree);\n        case \"ooo\":\n          return intUnit(three);\n        // time\n        case \"HH\":\n          return intUnit(two);\n        case \"H\":\n          return intUnit(oneOrTwo);\n        case \"hh\":\n          return intUnit(two);\n        case \"h\":\n          return intUnit(oneOrTwo);\n        case \"mm\":\n          return intUnit(two);\n        case \"m\":\n          return intUnit(oneOrTwo);\n        case \"q\":\n          return intUnit(oneOrTwo);\n        case \"qq\":\n          return intUnit(two);\n        case \"s\":\n          return intUnit(oneOrTwo);\n        case \"ss\":\n          return intUnit(two);\n        case \"S\":\n          return intUnit(oneToThree);\n        case \"SSS\":\n          return intUnit(three);\n        case \"u\":\n          return simple(oneToNine);\n        case \"uu\":\n          return simple(oneOrTwo);\n        case \"uuu\":\n          return intUnit(one);\n        // meridiem\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n        case \"kkkk\":\n          return intUnit(four);\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n        case \"W\":\n          return intUnit(oneOrTwo);\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false), 1);\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false), 1);\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true), 1);\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true), 1);\n        // offset/zone\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(\"([+-]\".concat(oneOrTwo.source, \")(?::(\").concat(two.source, \"))?\")), 2);\n        case \"ZZZ\":\n          return offset(new RegExp(\"([+-]\".concat(oneOrTwo.source, \")(\").concat(two.source, \")?\")), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n        // this special-case \"token\" represents a place where a macro-token expanded into a white-space literal\n        // in this case we accept any non-newline white-space\n        case \" \":\n          return simple(/[^\\S\\n\\r]/);\n        default:\n          return literal(t);\n      }\n    };\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP\n  };\n  unit.token = token;\n  return unit;\n}\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\"\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\"\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\"\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\"\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour12: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\"\n  },\n  hour24: {\n    numeric: \"H\",\n    \"2-digit\": \"HH\"\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\"\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\"\n  },\n  timeZoneName: {\n    long: \"ZZZZZ\",\n    short: \"ZZZ\"\n  }\n};\nfunction tokenForPart(part, formatOpts, resolvedOpts) {\n  const {\n    type,\n    value\n  } = part;\n  if (type === \"literal\") {\n    const isSpace = /^\\s+$/.test(value);\n    return {\n      literal: !isSpace,\n      val: isSpace ? \" \" : value\n    };\n  }\n  const style = formatOpts[type];\n\n  // The user might have explicitly specified hour12 or hourCycle\n  // if so, respect their decision\n  // if not, refer back to the resolvedOpts, which are based on the locale\n  let actualType = type;\n  if (type === \"hour\") {\n    if (formatOpts.hour12 != null) {\n      actualType = formatOpts.hour12 ? \"hour12\" : \"hour24\";\n    } else if (formatOpts.hourCycle != null) {\n      if (formatOpts.hourCycle === \"h11\" || formatOpts.hourCycle === \"h12\") {\n        actualType = \"hour12\";\n      } else {\n        actualType = \"hour24\";\n      }\n    } else {\n      // tokens only differentiate between 24 hours or not,\n      // so we do not need to check hourCycle here, which is less supported anyways\n      actualType = resolvedOpts.hour12 ? \"hour12\" : \"hour24\";\n    }\n  }\n  let val = partTypeStyleToTokenVal[actualType];\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n  if (val) {\n    return {\n      literal: false,\n      val\n    };\n  }\n  return undefined;\n}\nfunction buildRegex(units) {\n  const re = units.map(u => u.regex).reduce((f, r) => \"\".concat(f, \"(\").concat(r.source, \")\"), \"\");\n  return [\"^\".concat(re, \"$\"), units];\n}\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n          groups = h.groups ? h.groups + 1 : 1;\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n        matchIndex += groups;\n      }\n    }\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\nfunction dateTimeFromMatches(matches) {\n  const toField = token => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"o\":\n        return \"ordinal\";\n      case \"L\":\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n      case \"W\":\n        return \"weekNumber\";\n      case \"k\":\n        return \"weekYear\";\n      case \"q\":\n        return \"quarter\";\n      default:\n        return null;\n    }\n  };\n  let zone = null;\n  let specificOffset;\n  if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  }\n  if (!isUndefined(matches.Z)) {\n    if (!zone) {\n      zone = new FixedOffsetZone(matches.Z);\n    }\n    specificOffset = matches.Z;\n  }\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n    if (f) {\n      r[f] = matches[k];\n    }\n    return r;\n  }, {});\n  return [vals, zone, specificOffset];\n}\nlet dummyDateTimeCache = null;\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n  return dummyDateTimeCache;\n}\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n  const tokens = formatOptsToTokens(formatOpts, locale);\n  if (tokens == null || tokens.includes(undefined)) {\n    return token;\n  }\n  return tokens;\n}\nexport function expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map(t => maybeExpandMacroToken(t, locale)));\n}\n\n/**\n * @private\n */\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n    units = tokens.map(t => unitForToken(t, locale)),\n    disqualifyingUnit = units.find(t => t.invalidReason);\n  if (disqualifyingUnit) {\n    return {\n      input,\n      tokens,\n      invalidReason: disqualifyingUnit.invalidReason\n    };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n      regex = RegExp(regexString, \"i\"),\n      [rawMatches, matches] = match(input, regex, handlers),\n      [result, zone, specificOffset] = matches ? dateTimeFromMatches(matches) : [null, null, undefined];\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\"Can't include meridiem when specifying 24-hour format\");\n    }\n    return {\n      input,\n      tokens,\n      regex,\n      rawMatches,\n      matches,\n      result,\n      zone,\n      specificOffset\n    };\n  }\n}\nexport function parseFromTokens(locale, input, format) {\n  const {\n    result,\n    zone,\n    specificOffset,\n    invalidReason\n  } = explainFromTokens(locale, input, format);\n  return [result, zone, specificOffset, invalidReason];\n}\nexport function formatOptsToTokens(formatOpts, locale) {\n  if (!formatOpts) {\n    return null;\n  }\n  const formatter = Formatter.create(locale, formatOpts);\n  const df = formatter.dtFormatter(getDummyDateTime());\n  const parts = df.formatToParts();\n  const resolvedOpts = df.resolvedOptions();\n  return parts.map(p => tokenForPart(p, formatOpts, resolvedOpts));\n}","map":{"version":3,"names":["parseMillis","isUndefined","untruncateYear","signedOffset","hasOwnProperty","Formatter","FixedOffsetZone","IANAZone","DateTime","digitRegex","parseDigits","ConflictingSpecificationError","MISSING_FTP","intUnit","regex","post","arguments","length","undefined","i","deser","_ref","s","NBSP","String","fromCharCode","spaceOrNBSP","concat","spaceOrNBSPRegExp","RegExp","fixListRegex","replace","stripInsensitivities","toLowerCase","oneOf","strings","startIndex","map","join","_ref2","findIndex","offset","groups","_ref3","h","m","simple","_ref4","escapeToken","value","unitForToken","token","loc","one","two","three","four","six","oneOrTwo","oneToThree","oneToSix","oneToNine","twoToFour","fourToSix","literal","t","val","_ref5","unitate","eras","months","meridiems","weekdays","source","unit","invalidReason","partTypeStyleToTokenVal","year","numeric","month","short","long","day","weekday","dayperiod","dayPeriod","hour12","hour24","minute","second","timeZoneName","tokenForPart","part","formatOpts","resolvedOpts","type","isSpace","test","style","actualType","hourCycle","buildRegex","units","re","u","reduce","f","r","match","input","handlers","matches","all","matchIndex","slice","dateTimeFromMatches","toField","zone","specificOffset","z","create","Z","q","M","a","G","y","S","vals","Object","keys","k","dummyDateTimeCache","getDummyDateTime","fromMillis","maybeExpandMacroToken","locale","macroTokenToFormatOpts","tokens","formatOptsToTokens","includes","expandMacroTokens","Array","prototype","explainFromTokens","format","parseFormat","disqualifyingUnit","find","regexString","rawMatches","result","parseFromTokens","formatter","df","dtFormatter","parts","formatToParts","resolvedOptions","p"],"sources":["/Users/zenkri/HorizonHub/node_modules/luxon/src/impl/tokenParser.js"],"sourcesContent":["import { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\n\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\nfunction intUnit(regex, post = (i) => i) {\n  return { regex, deser: ([s]) => post(parseDigits(s)) };\n}\n\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `[ ${NBSP}]`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\n\nfunction stripInsensitivities(s) {\n  return s\n    .replace(/\\./g, \"\") // ignore dots that were made optional\n    .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n    .toLowerCase();\n}\n\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) =>\n        strings.findIndex((i) => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex,\n    };\n  }\n}\n\nfunction offset(regex, groups) {\n  return { regex, deser: ([, h, m]) => signedOffset(h, m), groups };\n}\n\nfunction simple(regex) {\n  return { regex, deser: ([s]) => s };\n}\n\nfunction escapeToken(value) {\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\n/**\n * @param token\n * @param {Locale} loc\n */\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n    two = digitRegex(loc, \"{2}\"),\n    three = digitRegex(loc, \"{3}\"),\n    four = digitRegex(loc, \"{4}\"),\n    six = digitRegex(loc, \"{6}\"),\n    oneOrTwo = digitRegex(loc, \"{1,2}\"),\n    oneToThree = digitRegex(loc, \"{1,3}\"),\n    oneToSix = digitRegex(loc, \"{1,6}\"),\n    oneToNine = digitRegex(loc, \"{1,9}\"),\n    twoToFour = digitRegex(loc, \"{2,4}\"),\n    fourToSix = digitRegex(loc, \"{4,6}\"),\n    literal = (t) => ({ regex: RegExp(escapeToken(t.val)), deser: ([s]) => s, literal: true }),\n    unitate = (t) => {\n      if (token.literal) {\n        return literal(t);\n      }\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\"), 0);\n        case \"GG\":\n          return oneOf(loc.eras(\"long\"), 0);\n        // years\n        case \"y\":\n          return intUnit(oneToSix);\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n        case \"yyyy\":\n          return intUnit(four);\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n        case \"M\":\n          return intUnit(oneOrTwo);\n        case \"MM\":\n          return intUnit(two);\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true), 1);\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true), 1);\n        case \"L\":\n          return intUnit(oneOrTwo);\n        case \"LL\":\n          return intUnit(two);\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false), 1);\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false), 1);\n        // dates\n        case \"d\":\n          return intUnit(oneOrTwo);\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n        case \"o\":\n          return intUnit(oneToThree);\n        case \"ooo\":\n          return intUnit(three);\n        // time\n        case \"HH\":\n          return intUnit(two);\n        case \"H\":\n          return intUnit(oneOrTwo);\n        case \"hh\":\n          return intUnit(two);\n        case \"h\":\n          return intUnit(oneOrTwo);\n        case \"mm\":\n          return intUnit(two);\n        case \"m\":\n          return intUnit(oneOrTwo);\n        case \"q\":\n          return intUnit(oneOrTwo);\n        case \"qq\":\n          return intUnit(two);\n        case \"s\":\n          return intUnit(oneOrTwo);\n        case \"ss\":\n          return intUnit(two);\n        case \"S\":\n          return intUnit(oneToThree);\n        case \"SSS\":\n          return intUnit(three);\n        case \"u\":\n          return simple(oneToNine);\n        case \"uu\":\n          return simple(oneOrTwo);\n        case \"uuu\":\n          return intUnit(one);\n        // meridiem\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n        case \"kkkk\":\n          return intUnit(four);\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n        case \"W\":\n          return intUnit(oneOrTwo);\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false), 1);\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false), 1);\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true), 1);\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true), 1);\n        // offset/zone\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n        case \"ZZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n        // this special-case \"token\" represents a place where a macro-token expanded into a white-space literal\n        // in this case we accept any non-newline white-space\n        case \" \":\n          return simple(/[^\\S\\n\\r]/);\n        default:\n          return literal(t);\n      }\n    };\n\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP,\n  };\n\n  unit.token = token;\n\n  return unit;\n}\n\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\",\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\",\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\",\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\",\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour12: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\",\n  },\n  hour24: {\n    numeric: \"H\",\n    \"2-digit\": \"HH\",\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\",\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\",\n  },\n  timeZoneName: {\n    long: \"ZZZZZ\",\n    short: \"ZZZ\",\n  },\n};\n\nfunction tokenForPart(part, formatOpts, resolvedOpts) {\n  const { type, value } = part;\n\n  if (type === \"literal\") {\n    const isSpace = /^\\s+$/.test(value);\n    return {\n      literal: !isSpace,\n      val: isSpace ? \" \" : value,\n    };\n  }\n\n  const style = formatOpts[type];\n\n  // The user might have explicitly specified hour12 or hourCycle\n  // if so, respect their decision\n  // if not, refer back to the resolvedOpts, which are based on the locale\n  let actualType = type;\n  if (type === \"hour\") {\n    if (formatOpts.hour12 != null) {\n      actualType = formatOpts.hour12 ? \"hour12\" : \"hour24\";\n    } else if (formatOpts.hourCycle != null) {\n      if (formatOpts.hourCycle === \"h11\" || formatOpts.hourCycle === \"h12\") {\n        actualType = \"hour12\";\n      } else {\n        actualType = \"hour24\";\n      }\n    } else {\n      // tokens only differentiate between 24 hours or not,\n      // so we do not need to check hourCycle here, which is less supported anyways\n      actualType = resolvedOpts.hour12 ? \"hour12\" : \"hour24\";\n    }\n  }\n  let val = partTypeStyleToTokenVal[actualType];\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n\n  if (val) {\n    return {\n      literal: false,\n      val,\n    };\n  }\n\n  return undefined;\n}\n\nfunction buildRegex(units) {\n  const re = units.map((u) => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\n\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n          groups = h.groups ? h.groups + 1 : 1;\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n        matchIndex += groups;\n      }\n    }\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\n\nfunction dateTimeFromMatches(matches) {\n  const toField = (token) => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"o\":\n        return \"ordinal\";\n      case \"L\":\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n      case \"W\":\n        return \"weekNumber\";\n      case \"k\":\n        return \"weekYear\";\n      case \"q\":\n        return \"quarter\";\n      default:\n        return null;\n    }\n  };\n\n  let zone = null;\n  let specificOffset;\n  if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  }\n\n  if (!isUndefined(matches.Z)) {\n    if (!zone) {\n      zone = new FixedOffsetZone(matches.Z);\n    }\n    specificOffset = matches.Z;\n  }\n\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n    if (f) {\n      r[f] = matches[k];\n    }\n\n    return r;\n  }, {});\n\n  return [vals, zone, specificOffset];\n}\n\nlet dummyDateTimeCache = null;\n\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n\n  return dummyDateTimeCache;\n}\n\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n  const tokens = formatOptsToTokens(formatOpts, locale);\n\n  if (tokens == null || tokens.includes(undefined)) {\n    return token;\n  }\n\n  return tokens;\n}\n\nexport function expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map((t) => maybeExpandMacroToken(t, locale)));\n}\n\n/**\n * @private\n */\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n    units = tokens.map((t) => unitForToken(t, locale)),\n    disqualifyingUnit = units.find((t) => t.invalidReason);\n\n  if (disqualifyingUnit) {\n    return { input, tokens, invalidReason: disqualifyingUnit.invalidReason };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n      regex = RegExp(regexString, \"i\"),\n      [rawMatches, matches] = match(input, regex, handlers),\n      [result, zone, specificOffset] = matches\n        ? dateTimeFromMatches(matches)\n        : [null, null, undefined];\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\n        \"Can't include meridiem when specifying 24-hour format\"\n      );\n    }\n    return { input, tokens, regex, rawMatches, matches, result, zone, specificOffset };\n  }\n}\n\nexport function parseFromTokens(locale, input, format) {\n  const { result, zone, specificOffset, invalidReason } = explainFromTokens(locale, input, format);\n  return [result, zone, specificOffset, invalidReason];\n}\n\nexport function formatOptsToTokens(formatOpts, locale) {\n  if (!formatOpts) {\n    return null;\n  }\n\n  const formatter = Formatter.create(locale, formatOpts);\n  const df = formatter.dtFormatter(getDummyDateTime());\n  const parts = df.formatToParts();\n  const resolvedOpts = df.resolvedOptions();\n  return parts.map((p) => tokenForPart(p, formatOpts, resolvedOpts));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}