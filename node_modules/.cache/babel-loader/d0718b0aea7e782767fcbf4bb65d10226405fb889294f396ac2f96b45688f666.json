{"ast":null,"code":"import'./App.css';import bg from'./icons/bg.jpg';import Temperature from'./components/Temperature';import Details from'./components/Details';import getFormattedData from'./makeitwork/weather';import Searchbar from'./components/Searchbar';import{useState,useEffect}from'react';import Daily from'./components/Daily';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[weatherData,setWeatherData]=useState(null);const[temperatureUnit,setTemperatureUnit]=useState('Celsius');const fetchWeather=async city=>{try{const data=await getFormattedData({q:city});console.log(\"data: \",data);setWeatherData(data.data);}catch(error){console.error('Error fetching weather data:',error);}};const handleCitySelection=selectedCity=>{fetchWeather(selectedCity);};;const handleToggleTemperatureUnit=unit=>{setTemperatureUnit(unit);};useEffect(()=>{if(weatherData){fetchWeather(weatherData.name);}else{fetchWeather('Berlin');}},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\" w-full h-screen bg-cover overflow-y-auto\",style:{backgroundImage:\"url(\".concat(bg,\")\")},children:[/*#__PURE__*/_jsx(Searchbar,{onCitySelect:handleCitySelection,onToggleTemperatureUnit:handleToggleTemperatureUnit}),weatherData&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Temperature,{currentFormattedData:weatherData,temperatureUnit:temperatureUnit}),/*#__PURE__*/_jsx(Details,{h:\"hourly forecast\",currentFormattedData:weatherData,temperatureUnit:temperatureUnit}),/*#__PURE__*/_jsx(Daily,{h:\"hourly forecast\",currentFormattedData:weatherData,temperatureUnit:temperatureUnit})]})]});}export default App;","map":{"version":3,"names":["bg","Temperature","Details","getFormattedData","Searchbar","useState","useEffect","Daily","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","weatherData","setWeatherData","temperatureUnit","setTemperatureUnit","fetchWeather","city","data","q","console","log","error","handleCitySelection","selectedCity","handleToggleTemperatureUnit","unit","name","className","style","backgroundImage","concat","children","onCitySelect","onToggleTemperatureUnit","currentFormattedData","h"],"sources":["/Users/zenkri/HorizonHub/src/App.js"],"sourcesContent":["import './App.css';\nimport bg from './icons/bg.jpg';\nimport Temperature from './components/Temperature';\nimport Details from './components/Details';\nimport getFormattedData from './makeitwork/weather';\nimport Searchbar from './components/Searchbar';\nimport { useState, useEffect } from 'react';\nimport Daily from './components/Daily';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [temperatureUnit, setTemperatureUnit] = useState('Celsius');\n  const fetchWeather = async (city) => {\n    try {\n      const data = await getFormattedData({ q: city});\n      console.log(\"data: \",data);\n      setWeatherData(data.data);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n\n  const handleCitySelection = (selectedCity) => {\n    fetchWeather(selectedCity);\n};;\n\nconst handleToggleTemperatureUnit = (unit) => {\n  setTemperatureUnit(unit);\n};\n\n  useEffect(() => {\n    if (weatherData) {\n        fetchWeather(weatherData.name);\n    } else {\n\n        fetchWeather('Berlin');\n    }\n}, []);\n  return (\n   <div className={` w-full h-screen bg-cover overflow-y-auto`}style={{ backgroundImage: `url(${bg})` }}>\n      <Searchbar \n      onCitySelect={handleCitySelection}\n      onToggleTemperatureUnit={handleToggleTemperatureUnit} />\n      {weatherData && (\n                <>\n                    <Temperature \n                      currentFormattedData={weatherData} \n                      temperatureUnit={temperatureUnit}\n                    />\n                    <Details\n                       h=\"hourly forecast\" \n                       currentFormattedData={weatherData} \n                       temperatureUnit={temperatureUnit}\n                       />\n                    <Daily \n                      h=\"hourly forecast\" \n                      currentFormattedData={weatherData} \n                      temperatureUnit={temperatureUnit}\n                      />\n                    \n                </>\n      )}\n   </div>\n \n  );\n}\n\nexport default App;\n\n"],"mappings":"AAAA,MAAO,WAAW,CAClB,MAAO,CAAAA,EAAE,KAAM,gBAAgB,CAC/B,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,gBAAgB,KAAM,sBAAsB,CACnD,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACY,eAAe,CAAEC,kBAAkB,CAAC,CAAGb,QAAQ,CAAC,SAAS,CAAC,CACjE,KAAM,CAAAc,YAAY,CAAG,KAAO,CAAAC,IAAI,EAAK,CACnC,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAlB,gBAAgB,CAAC,CAAEmB,CAAC,CAAEF,IAAI,CAAC,CAAC,CAC/CG,OAAO,CAACC,GAAG,CAAC,QAAQ,CAACH,IAAI,CAAC,CAC1BL,cAAc,CAACK,IAAI,CAACA,IAAI,CAAC,CAC3B,CAAE,MAAOI,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAAC,CAED,KAAM,CAAAC,mBAAmB,CAAIC,YAAY,EAAK,CAC5CR,YAAY,CAACQ,YAAY,CAAC,CAC9B,CAAC,CAAC,CAEF,KAAM,CAAAC,2BAA2B,CAAIC,IAAI,EAAK,CAC5CX,kBAAkB,CAACW,IAAI,CAAC,CAC1B,CAAC,CAECvB,SAAS,CAAC,IAAM,CACd,GAAIS,WAAW,CAAE,CACbI,YAAY,CAACJ,WAAW,CAACe,IAAI,CAAC,CAClC,CAAC,IAAM,CAEHX,YAAY,CAAC,QAAQ,CAAC,CAC1B,CACJ,CAAC,CAAE,EAAE,CAAC,CACJ,mBACCN,KAAA,QAAKkB,SAAS,4CAA8C,CAAAC,KAAK,CAAE,CAAEC,eAAe,QAAAC,MAAA,CAASlC,EAAE,KAAI,CAAE,CAAAmC,QAAA,eAClG1B,IAAA,CAACL,SAAS,EACVgC,YAAY,CAAEV,mBAAoB,CAClCW,uBAAuB,CAAET,2BAA4B,CAAE,CAAC,CACvDb,WAAW,eACFF,KAAA,CAAAF,SAAA,EAAAwB,QAAA,eACI1B,IAAA,CAACR,WAAW,EACVqC,oBAAoB,CAAEvB,WAAY,CAClCE,eAAe,CAAEA,eAAgB,CAClC,CAAC,cACFR,IAAA,CAACP,OAAO,EACLqC,CAAC,CAAC,iBAAiB,CACnBD,oBAAoB,CAAEvB,WAAY,CAClCE,eAAe,CAAEA,eAAgB,CAChC,CAAC,cACLR,IAAA,CAACF,KAAK,EACJgC,CAAC,CAAC,iBAAiB,CACnBD,oBAAoB,CAAEvB,WAAY,CAClCE,eAAe,CAAEA,eAAgB,CAChC,CAAC,EAEN,CACX,EACC,CAAC,CAGT,CAEA,cAAe,CAAAH,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}