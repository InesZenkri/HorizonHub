{"ast":null,"code":"var _jsxFileName = \"/Users/zenkri/HorizonHub/src/components/Map.jsx\",\n  _s = $RefreshSig$();\n// MapModal.jsx\nimport 'leaflet/dist/leaflet.css';\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapModal = ({\n  onClose,\n  onSelectLocation\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n\n  // Use a map library (e.g., Leaflet, Mapbox) to create an interactive map\n  useEffect(() => {\n    // Initialize the map library and set up event listeners for location selection\n    // When the user clicks on a location, call onSelectLocation with the coordinates\n\n    // For example, using Leaflet:\n    const map = L.map(mapContainerRef.current).setView([0, 0], 2);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n    map.on('click', e => {\n      const selectedCoordinates = {\n        latitude: e.latlng.lat,\n        longitude: e.latlng.lng\n      };\n      onSelectLocation(selectedCoordinates);\n    });\n\n    // Cleanup when the component is unmounted\n    return () => {\n      map.off('click'); // Remove the click event listener\n      map.remove(); // Remove the map instance\n    };\n  }, [onSelectLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainerRef,\n        style: {\n          height: '400px',\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-2 p-2 bg-blue-500 text-white rounded-md\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MapModal, \"JDsoK+vCj+KIdyRFXV6E+3zLK1c=\");\n_c = MapModal;\nexport default MapModal;\nvar _c;\n$RefreshReg$(_c, \"MapModal\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","MapModal","onClose","onSelectLocation","_s","mapContainerRef","map","L","current","setView","tileLayer","addTo","on","e","selectedCoordinates","latitude","latlng","lat","longitude","lng","off","remove","className","children","ref","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/zenkri/HorizonHub/src/components/Map.jsx"],"sourcesContent":["// MapModal.jsx\nimport 'leaflet/dist/leaflet.css';\nimport React, { useRef, useEffect } from 'react';\n\nconst MapModal = ({ onClose, onSelectLocation }) => {\n  const mapContainerRef = useRef(null);\n\n  // Use a map library (e.g., Leaflet, Mapbox) to create an interactive map\n  useEffect(() => {\n    // Initialize the map library and set up event listeners for location selection\n    // When the user clicks on a location, call onSelectLocation with the coordinates\n\n    // For example, using Leaflet:\n    const map = L.map(mapContainerRef.current).setView([0, 0], 2);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n\n    map.on('click', (e) => {\n      const selectedCoordinates = {\n        latitude: e.latlng.lat,\n        longitude: e.latlng.lng,\n      };\n      onSelectLocation(selectedCoordinates);\n    });\n\n    // Cleanup when the component is unmounted\n    return () => {\n      map.off('click'); // Remove the click event listener\n      map.remove(); // Remove the map instance\n    };\n  }, [onSelectLocation]);\n\n  return (\n    <div className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-center\">\n      <div className=\"bg-white p-4 rounded-md\">\n        <div ref={mapContainerRef} style={{ height: '400px', width: '100%' }} />\n        <button className=\"mt-2 p-2 bg-blue-500 text-white rounded-md\" onClick={onClose}>\n          Close\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MapModal;\n"],"mappings":";;AAAA;AACA,OAAO,0BAA0B;AACjC,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAMC,eAAe,GAAGR,MAAM,CAAC,IAAI,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACd;IACA;;IAEA;IACA,MAAMQ,GAAG,GAAGC,CAAC,CAACD,GAAG,CAACD,eAAe,CAACG,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7DF,CAAC,CAACG,SAAS,CAAC,oDAAoD,CAAC,CAACC,KAAK,CAACL,GAAG,CAAC;IAE5EA,GAAG,CAACM,EAAE,CAAC,OAAO,EAAGC,CAAC,IAAK;MACrB,MAAMC,mBAAmB,GAAG;QAC1BC,QAAQ,EAAEF,CAAC,CAACG,MAAM,CAACC,GAAG;QACtBC,SAAS,EAAEL,CAAC,CAACG,MAAM,CAACG;MACtB,CAAC;MACDhB,gBAAgB,CAACW,mBAAmB,CAAC;IACvC,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXR,GAAG,CAACc,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;MAClBd,GAAG,CAACe,MAAM,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAAClB,gBAAgB,CAAC,CAAC;EAEtB,oBACEH,OAAA;IAAKsB,SAAS,EAAC,0FAA0F;IAAAC,QAAA,eACvGvB,OAAA;MAAKsB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtCvB,OAAA;QAAKwB,GAAG,EAAEnB,eAAgB;QAACoB,KAAK,EAAE;UAAEC,MAAM,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxE/B,OAAA;QAAQsB,SAAS,EAAC,4CAA4C;QAACU,OAAO,EAAE9B,OAAQ;QAAAqB,QAAA,EAAC;MAEjF;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CArCIH,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}