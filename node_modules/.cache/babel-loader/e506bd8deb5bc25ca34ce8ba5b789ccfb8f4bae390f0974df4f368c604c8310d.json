{"ast":null,"code":"var _jsxFileName = \"/Users/zenkri/HorizonHub/src/components/Details.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Icon } from '@iconify/react';\nimport logo from '../icons/er.svg';\nimport { useState, useEffect } from 'react';\nimport { round, br } from '../makeitwork/weather';\nimport ReactCountryFlag from 'react-country-flag';\nimport citiesData from 'city/cities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_SUGGESTIONS = 20;\nconst countryFlags = {};\nconst citiesByCountry = {};\ncitiesData.forEach(city => {\n  if (!citiesByCountry[city.country]) {\n    citiesByCountry[city.country] = [];\n    countryFlags[city.country] = /*#__PURE__*/_jsxDEV(ReactCountryFlag, {\n      style: {\n        width: '1.5rem'\n      },\n      countryCode: city.iso,\n      svg: true,\n      cdnUrl: \"https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.3/flags/1x1/\",\n      cdnSuffix: \"svg\",\n      title: city.iso\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n  citiesByCountry[city.country].push(city);\n});\nfunction Details({\n  h,\n  currentFormattedData\n}) {\n  _s();\n  const [weatherDetails, setWeatherDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        if (currentFormattedData) {\n          const details = await br(currentFormattedData);\n          setWeatherDetails(details);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [currentFormattedData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-stat mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white font-medium uppercase\",\n        children: h\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"my-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center justify-between text-white details-scroll-container relative\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this) : weatherDetails && weatherDetails.length > 0 ? weatherDetails.map((weatherItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center mx-7\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-light text-sm\",\n          children: new Date(weatherItem.timestamp).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Icon, {\n          icon: `meteocons:${weatherItem.icon}-fill`,\n          width: \"45\",\n          className: \"my-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-medium\",\n          children: [round(weatherItem.temperature), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hourly forecast data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Error\",\n          type: \"image/svg\",\n          className: \"object-cover h-50 w-96\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Details, \"v7dGdRfpCsoDMb3DpZykFl6z0Ws=\");\n_c = Details;\nexport default Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["React","Icon","logo","useState","useEffect","round","br","ReactCountryFlag","citiesData","jsxDEV","_jsxDEV","MAX_SUGGESTIONS","countryFlags","citiesByCountry","forEach","city","country","style","width","countryCode","iso","svg","cdnUrl","cdnSuffix","title","fileName","_jsxFileName","lineNumber","columnNumber","push","Details","h","currentFormattedData","_s","weatherDetails","setWeatherDetails","loading","setLoading","fetchData","details","children","className","length","map","weatherItem","index","Date","timestamp","toLocaleTimeString","hour","minute","icon","temperature","src","alt","type","_c","$RefreshReg$"],"sources":["/Users/zenkri/HorizonHub/src/components/Details.jsx"],"sourcesContent":["import React from 'react'\nimport { Icon } from '@iconify/react';\nimport logo from '../icons/er.svg';\nimport { useState, useEffect } from 'react';\nimport { round,br  } from '../makeitwork/weather'; \nimport ReactCountryFlag from 'react-country-flag'\nimport citiesData, { type cityEntry } from 'city/cities'\n\n\n\nconst MAX_SUGGESTIONS = 20;\nconst countryFlags: { [key: string]: React.ReactElement } = {};\nconst citiesByCountry: { [key: string]: cityEntry[] } = {};\n\ncitiesData.forEach((city) => {\n  if (!citiesByCountry[city.country]) {\n    citiesByCountry[city.country] = [];\n    countryFlags[city.country] = (\n      <ReactCountryFlag\n        style={{\n          width: '1.5rem'\n        }}\n        countryCode={city.iso}\n        svg\n        cdnUrl=\"https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.3/flags/1x1/\"\n        cdnSuffix=\"svg\"\n        title={city.iso}\n      />\n    );\n  }\n  citiesByCountry[city.country].push(city);\n});\n\n\nfunction Details({h, currentFormattedData}) {\n    const [weatherDetails, setWeatherDetails] = useState(null);\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        const fetchData = async () => {\n          setLoading(true);\n          try {\n            if (currentFormattedData) {\n              const details = await br(currentFormattedData);\n              setWeatherDetails(details);\n            }\n          }finally {\n            setLoading(false);\n          }\n        };\n        fetchData();\n      }, [currentFormattedData]);\n      return (\n        <div>\n          <div className=\"flex items-center justify-stat mt-6\">\n            <p className=\"text-white font-medium uppercase\">{h}</p>\n          </div>\n          <hr className=\"my-2\"></hr>\n          <div className=\"flex flex-row items-center justify-between text-white details-scroll-container relative\">\n            {loading ? (\n              <p>Loading...</p>\n            ) : weatherDetails && weatherDetails.length > 0 ? (\n              weatherDetails.map((weatherItem, index) => (\n                <div key={index} className=\"flex flex-col items-center justify-center mx-7\">\n                  <p className=\"font-light text-sm\">\n                    {new Date(weatherItem.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                  </p>\n                  <Icon icon={`meteocons:${weatherItem.icon}-fill`} width=\"45\" className=\"my-1\" />\n                  <p className=\"font-medium\">{round(weatherItem.temperature)}Â°</p>\n                </div>\n              ))\n            ) : (\n              <div className=\"flex flex-col items-center justify-center text-white\">\n\n                <p>No hourly forecast data available.</p>\n                <img src={logo} alt=\"Error\" type=\"image/svg\" className=\"object-cover h-50 w-96\" />\n              </div>\n            )}\n          </div>\n        </div>\n      );\n    }\n    \n    export default Details;\n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}