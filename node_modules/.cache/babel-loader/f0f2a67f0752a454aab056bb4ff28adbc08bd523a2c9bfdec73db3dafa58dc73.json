{"ast":null,"code":"import{DateTime}from'luxon';import config from\"./config\";const API_KEY=config.API_KEY;const BASE_URL=\"https://api.weatherapi.com/v1\";const getData=searchParams=>{const{q}=searchParams;const url=new URL(\"\".concat(BASE_URL,\"/forecast.json\"));const days=14;url.search=new URLSearchParams({key:API_KEY,q,days});return fetch(url).then(res=>res.json());};const getFormattedData=async searchParams=>{let data;try{data=await getData(searchParams);console.log(data);return{data};}catch(error){console.error(\"Error fetching or formatting data:\",error.message);throw error;}};const CustomDate=function(localtime_epoch){let format=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"cccc, dd LLL yyyy' | Local time: 'hh:mm a\";const localDt=DateTime.fromSeconds(localtime_epoch);const formattedDate=localDt.toFormat(format);return formattedDate;};const round=number=>{return number!==undefined?number.toFixed(0):'';};export default getFormattedData;export{round,getFormattedData,CustomDate};","map":{"version":3,"names":["DateTime","config","API_KEY","BASE_URL","getData","searchParams","q","url","URL","concat","days","search","URLSearchParams","key","fetch","then","res","json","getFormattedData","data","console","log","error","message","CustomDate","localtime_epoch","format","arguments","length","undefined","localDt","fromSeconds","formattedDate","toFormat","round","number","toFixed"],"sources":["/Users/zenkri/HorizonHub/src/makeitwork/weather.js"],"sourcesContent":["import { DateTime } from 'luxon';\nimport config from \"./config\";\nconst API_KEY = config.API_KEY;\nconst BASE_URL =\"https://api.weatherapi.com/v1\";\n\n\nconst getData = (searchParams) => {\n    const {q} = searchParams;\n    const url = new URL(`${BASE_URL}/forecast.json`);\n    const days = 14;\n    url.search = new URLSearchParams({ key: API_KEY, q, days });\n    return fetch(url).then((res) => res.json());\n};\n\nconst getFormattedData = async (searchParams) => { \n    let data;\n    try {\n        data = await getData(searchParams);\n        console.log(data);\n        return {data};\n    } catch (error) {\n        console.error(\"Error fetching or formatting data:\", error.message);\n        throw error;\n    }\n};\n\nconst CustomDate = (localtime_epoch, format = \"cccc, dd LLL yyyy' | Local time: 'hh:mm a\") => {\n    const localDt = DateTime.fromSeconds(localtime_epoch);\n    const formattedDate = localDt.toFormat(format);\n    return formattedDate;\n};\n\nconst round = (number) => {\n    return number !== undefined ? number.toFixed(0) : '';\n};\n\n\nexport default getFormattedData;\nexport { round, getFormattedData,CustomDate}\n\n\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,KAAM,CAAAC,OAAO,CAAGD,MAAM,CAACC,OAAO,CAC9B,KAAM,CAAAC,QAAQ,CAAE,+BAA+B,CAG/C,KAAM,CAAAC,OAAO,CAAIC,YAAY,EAAK,CAC9B,KAAM,CAACC,CAAC,CAAC,CAAGD,YAAY,CACxB,KAAM,CAAAE,GAAG,CAAG,GAAI,CAAAC,GAAG,IAAAC,MAAA,CAAIN,QAAQ,kBAAgB,CAAC,CAChD,KAAM,CAAAO,IAAI,CAAG,EAAE,CACfH,GAAG,CAACI,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAEC,GAAG,CAAEX,OAAO,CAAEI,CAAC,CAAEI,IAAK,CAAC,CAAC,CAC3D,MAAO,CAAAI,KAAK,CAACP,GAAG,CAAC,CAACQ,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/C,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAG,KAAO,CAAAb,YAAY,EAAK,CAC7C,GAAI,CAAAc,IAAI,CACR,GAAI,CACAA,IAAI,CAAG,KAAM,CAAAf,OAAO,CAACC,YAAY,CAAC,CAClCe,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CACjB,MAAO,CAACA,IAAI,CAAC,CACjB,CAAE,MAAOG,KAAK,CAAE,CACZF,OAAO,CAACE,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAACC,OAAO,CAAC,CAClE,KAAM,CAAAD,KAAK,CACf,CACJ,CAAC,CAED,KAAM,CAAAE,UAAU,CAAG,QAAAA,CAACC,eAAe,CAA2D,IAAzD,CAAAC,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,2CAA2C,CACrF,KAAM,CAAAG,OAAO,CAAG9B,QAAQ,CAAC+B,WAAW,CAACN,eAAe,CAAC,CACrD,KAAM,CAAAO,aAAa,CAAGF,OAAO,CAACG,QAAQ,CAACP,MAAM,CAAC,CAC9C,MAAO,CAAAM,aAAa,CACxB,CAAC,CAED,KAAM,CAAAE,KAAK,CAAIC,MAAM,EAAK,CACtB,MAAO,CAAAA,MAAM,GAAKN,SAAS,CAAGM,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,CAAG,EAAE,CACxD,CAAC,CAGD,cAAe,CAAAlB,gBAAgB,CAC/B,OAASgB,KAAK,CAAEhB,gBAAgB,CAACM,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}