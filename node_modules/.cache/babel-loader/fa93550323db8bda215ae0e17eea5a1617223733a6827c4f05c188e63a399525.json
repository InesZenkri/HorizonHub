{"ast":null,"code":"import React from'react';//import { Icon } from '@iconify/react';\n//import { useState, useEffect } from 'react';\nimport{round}from'../makeitwork/weather';import{DateTime}from'luxon';import{UilTear,UilWind,UilArrowUp,UilArrowDown}from\"@iconscout/react-unicons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Daily(_ref){let{h,currentFormattedData,temperatureUnit}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"mx-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-stat mt-6\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-white font-medium uppercase\",children:h})}),/*#__PURE__*/_jsx(\"hr\",{className:\"my-2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-row items-center justify-start text-white details-scroll-container overflow-x-auto relative \",children:currentFormattedData.forecast.forecastday.slice(1).map((dayItem,index)=>{const date=DateTime.fromISO(dayItem.date);// Extract information from the response\nconst iconPath=dayItem.day.condition.icon;const iconParts=iconPath.split('/');const iconName=iconParts[iconParts.length-1];// Construct the new path based on your desired folder structure\nconst dayOrNight=iconPath.includes('day')?'day':'night';const newPath=\"./icons/64x64/\".concat(dayOrNight,\"/\").concat(iconName);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center mx-2\",style:{backgroundColor:'rgb(255, 255, 255, 0.2)',borderRadius:'8px'},children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-light text-sm\",children:date.toFormat('cccc')}),/*#__PURE__*/_jsx(\"img\",{src:dayItem.day.condition.icon,className:\"my-1\",type:\"image/png\",alt:dayItem.day.condition.text}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-light text-sm flex flex-row\",children:[/*#__PURE__*/_jsx(UilArrowUp,{size:18}),\" \",temperatureUnit==='Celsius'?round(dayItem.day.maxtemp_c):round(dayItem.day.maxtemp_f),\"\\xB0, \",/*#__PURE__*/_jsx(UilArrowDown,{size:18}),\" \",temperatureUnit==='Celsius'?round(dayItem.day.mintemp_c):round(dayItem.day.mintemp_f),\"\\xB0\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-light text-sm flex flex-row mx-2\",children:[/*#__PURE__*/_jsx(UilTear,{size:18}),\" \",round(dayItem.day.avghumidity),\", \",/*#__PURE__*/_jsx(UilWind,{size:18}),\" \",round(dayItem.day.maxwind_kph)]})]},index);})})]});}export default Daily;","map":{"version":3,"names":["React","round","DateTime","UilTear","UilWind","UilArrowUp","UilArrowDown","jsx","_jsx","jsxs","_jsxs","Daily","_ref","h","currentFormattedData","temperatureUnit","className","children","forecast","forecastday","slice","map","dayItem","index","date","fromISO","iconPath","day","condition","icon","iconParts","split","iconName","length","dayOrNight","includes","newPath","concat","style","backgroundColor","borderRadius","toFormat","src","type","alt","text","size","maxtemp_c","maxtemp_f","mintemp_c","mintemp_f","avghumidity","maxwind_kph"],"sources":["/Users/zenkri/HorizonHub/src/components/Daily.jsx"],"sourcesContent":["import React from 'react'\n//import { Icon } from '@iconify/react';\n//import { useState, useEffect } from 'react';\nimport { round  } from '../makeitwork/weather'; \nimport { DateTime } from 'luxon';\nimport {\n    UilTear,\n    UilWind,\n    UilArrowUp,\n    UilArrowDown,\n  } from \"@iconscout/react-unicons\";\nfunction Daily({h, currentFormattedData ,temperatureUnit}) {\n\n    return (\n      <div className='mx-3'>\n          <div className=\"flex items-center justify-stat mt-6\">\n            <p className=\"text-white font-medium uppercase\">{h}</p>\n          </div>\n          <hr className=\"my-2\"></hr>\n          <div className=\"flex flex-row items-center justify-start text-white details-scroll-container overflow-x-auto relative \">\n            {currentFormattedData.forecast.forecastday.slice(1).map((dayItem, index) => {\n              const date = DateTime.fromISO(dayItem.date);\n                // Extract information from the response\n                const iconPath = dayItem.day.condition.icon;\n                const iconParts = iconPath.split('/');\n                const iconName = iconParts[iconParts.length - 1]; \n\n                // Construct the new path based on your desired folder structure\n                const dayOrNight = iconPath.includes('day') ? 'day' : 'night';\n                const newPath = `./icons/64x64/${dayOrNight}/${iconName}`;\n              return (\n                <div\n                  key={index}\n                  className=\"flex flex-col items-center justify-center mx-2\"\n                  style={{ backgroundColor: 'rgb(255, 255, 255, 0.2)', borderRadius: '8px' }}\n                >\n                  <p className=\"font-light text-sm\">{date.toFormat('cccc')}</p>\n                  <img src={dayItem.day.condition.icon} className=\"my-1\" type=\"image/png\" alt={dayItem.day.condition.text} />\n                  <p className=\"font-light text-sm flex flex-row\">\n                  <UilArrowUp size={18} /> {temperatureUnit === 'Celsius' ? round(dayItem.day.maxtemp_c) : round(dayItem.day.maxtemp_f)}°, <UilArrowDown size={18} /> {temperatureUnit === 'Celsius' ? round(dayItem.day.mintemp_c) : round(dayItem.day.mintemp_f)}°\n                  </p>\n                  <p className=\"font-light text-sm flex flex-row mx-2\">\n                  <UilTear size={18} /> {round(dayItem.day.avghumidity)}, <UilWind size={18} /> {round(dayItem.day.maxwind_kph)}\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      );\n\n}  \nexport default Daily;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB;AACA;AACA,OAASC,KAAK,KAAS,uBAAuB,CAC9C,OAASC,QAAQ,KAAQ,OAAO,CAChC,OACIC,OAAO,CACPC,OAAO,CACPC,UAAU,CACVC,YAAY,KACP,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACpC,QAAS,CAAAC,KAAKA,CAAAC,IAAA,CAA6C,IAA5C,CAACC,CAAC,CAAEC,oBAAoB,CAAEC,eAAe,CAAC,CAAAH,IAAA,CAErD,mBACEF,KAAA,QAAKM,SAAS,CAAC,MAAM,CAAAC,QAAA,eACjBT,IAAA,QAAKQ,SAAS,CAAC,qCAAqC,CAAAC,QAAA,cAClDT,IAAA,MAAGQ,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAEJ,CAAC,CAAI,CAAC,CACpD,CAAC,cACNL,IAAA,OAAIQ,SAAS,CAAC,MAAM,CAAK,CAAC,cAC1BR,IAAA,QAAKQ,SAAS,CAAC,wGAAwG,CAAAC,QAAA,CACpHH,oBAAoB,CAACI,QAAQ,CAACC,WAAW,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,GAAK,CAC1E,KAAM,CAAAC,IAAI,CAAGtB,QAAQ,CAACuB,OAAO,CAACH,OAAO,CAACE,IAAI,CAAC,CACzC;AACA,KAAM,CAAAE,QAAQ,CAAGJ,OAAO,CAACK,GAAG,CAACC,SAAS,CAACC,IAAI,CAC3C,KAAM,CAAAC,SAAS,CAAGJ,QAAQ,CAACK,KAAK,CAAC,GAAG,CAAC,CACrC,KAAM,CAAAC,QAAQ,CAAGF,SAAS,CAACA,SAAS,CAACG,MAAM,CAAG,CAAC,CAAC,CAEhD;AACA,KAAM,CAAAC,UAAU,CAAGR,QAAQ,CAACS,QAAQ,CAAC,KAAK,CAAC,CAAG,KAAK,CAAG,OAAO,CAC7D,KAAM,CAAAC,OAAO,kBAAAC,MAAA,CAAoBH,UAAU,MAAAG,MAAA,CAAIL,QAAQ,CAAE,CAC3D,mBACEtB,KAAA,QAEEM,SAAS,CAAC,gDAAgD,CAC1DsB,KAAK,CAAE,CAAEC,eAAe,CAAE,yBAAyB,CAAEC,YAAY,CAAE,KAAM,CAAE,CAAAvB,QAAA,eAE3ET,IAAA,MAAGQ,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAEO,IAAI,CAACiB,QAAQ,CAAC,MAAM,CAAC,CAAI,CAAC,cAC7DjC,IAAA,QAAKkC,GAAG,CAAEpB,OAAO,CAACK,GAAG,CAACC,SAAS,CAACC,IAAK,CAACb,SAAS,CAAC,MAAM,CAAC2B,IAAI,CAAC,WAAW,CAACC,GAAG,CAAEtB,OAAO,CAACK,GAAG,CAACC,SAAS,CAACiB,IAAK,CAAE,CAAC,cAC3GnC,KAAA,MAAGM,SAAS,CAAC,kCAAkC,CAAAC,QAAA,eAC/CT,IAAA,CAACH,UAAU,EAACyC,IAAI,CAAE,EAAG,CAAE,CAAC,IAAC,CAAC/B,eAAe,GAAK,SAAS,CAAGd,KAAK,CAACqB,OAAO,CAACK,GAAG,CAACoB,SAAS,CAAC,CAAG9C,KAAK,CAACqB,OAAO,CAACK,GAAG,CAACqB,SAAS,CAAC,CAAC,QAAG,cAAAxC,IAAA,CAACF,YAAY,EAACwC,IAAI,CAAE,EAAG,CAAE,CAAC,IAAC,CAAC/B,eAAe,GAAK,SAAS,CAAGd,KAAK,CAACqB,OAAO,CAACK,GAAG,CAACsB,SAAS,CAAC,CAAGhD,KAAK,CAACqB,OAAO,CAACK,GAAG,CAACuB,SAAS,CAAC,CAAC,MACjP,EAAG,CAAC,cACJxC,KAAA,MAAGM,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eACpDT,IAAA,CAACL,OAAO,EAAC2C,IAAI,CAAE,EAAG,CAAE,CAAC,IAAC,CAAC7C,KAAK,CAACqB,OAAO,CAACK,GAAG,CAACwB,WAAW,CAAC,CAAC,IAAE,cAAA3C,IAAA,CAACJ,OAAO,EAAC0C,IAAI,CAAE,EAAG,CAAE,CAAC,IAAC,CAAC7C,KAAK,CAACqB,OAAO,CAACK,GAAG,CAACyB,WAAW,CAAC,EAC1G,CAAC,GAXC7B,KAYF,CAAC,CAEV,CAAC,CAAC,CACC,CAAC,EACH,CAAC,CAGd,CACA,cAAe,CAAAZ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}